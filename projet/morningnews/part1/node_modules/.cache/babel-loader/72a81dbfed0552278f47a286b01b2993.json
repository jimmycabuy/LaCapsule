{"ast":null,"code":"var _jsxFileName = \"/Users/jimmycabuy/Documents/jim/DIVERS/code/lacapsule/projet/morningnews/part1/src/components/ScreenSource.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport \"../App.css\";\nimport { List, Avatar } from \"antd\";\nimport Nav from \"./Nav\";\nimport { Link } from \"react-router-dom\";\n\nfunction ScreenSource() {\n  const [sourceList, setSourceList] = useState([]);\n  useEffect(() => {\n    async function loadSource() {\n      var rawResponse = await fetch(\"https://newsapi.org/v2/top-headlines/sources?apiKey=e1af60fe24304a10815b363c551f94ea&country=fr&language=fr\");\n      var response = await rawResponse.json(); // setSourceList(response);\n\n      var sourcesFromAPI = response.sources.map(sourceAPI => {\n        return {\n          source: sourceAPI.name,\n          description: sourceAPI.description,\n          id: sourceAPI.id\n        };\n      });\n      setSourceList(sourcesFromAPI);\n      console.log(sourcesFromAPI);\n    }\n\n    loadSource();\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Nav, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"Banner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"HomeThemes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(List, {\n    itemLayout: \"horizontal\",\n    dataSource: sourceList,\n    renderItem: item => React.createElement(List.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(List.Item.Meta, {\n      avatar: React.createElement(Avatar, {\n        src: \"#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }) // title={<Link to='/screenarticlesbysource'>{item.source}</Link>}\n      ,\n      title: React.createElement(Link, {\n        to: `/screenarticlesbysource/${item.id}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, item.source),\n      description: item.description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  })));\n}\n\nexport default ScreenSource;","map":{"version":3,"sources":["/Users/jimmycabuy/Documents/jim/DIVERS/code/lacapsule/projet/morningnews/part1/src/components/ScreenSource.jsx"],"names":["React","useState","useEffect","List","Avatar","Nav","Link","ScreenSource","sourceList","setSourceList","loadSource","rawResponse","fetch","response","json","sourcesFromAPI","sources","map","sourceAPI","source","name","description","id","console","log","item"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,YAAP;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,MAA7B;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,SAASC,YAAT,GAAwB;AACtB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,EAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeQ,UAAf,GAA4B;AAC1B,UAAIC,WAAW,GAAG,MAAMC,KAAK,CAC3B,6GAD2B,CAA7B;AAGA,UAAIC,QAAQ,GAAG,MAAMF,WAAW,CAACG,IAAZ,EAArB,CAJ0B,CAK1B;;AAEA,UAAIC,cAAc,GAAGF,QAAQ,CAACG,OAAT,CAAiBC,GAAjB,CAAsBC,SAAD,IAAe;AACvD,eAAO;AACLC,UAAAA,MAAM,EAAED,SAAS,CAACE,IADb;AAELC,UAAAA,WAAW,EAAEH,SAAS,CAACG,WAFlB;AAGLC,UAAAA,EAAE,EAAEJ,SAAS,CAACI;AAHT,SAAP;AAKD,OANoB,CAArB;AAOAb,MAAAA,aAAa,CAACM,cAAD,CAAb;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAYT,cAAZ;AACD;;AACDL,IAAAA,UAAU;AACX,GAnBQ,EAmBN,EAnBM,CAAT;AAqBA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAGE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAKE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AACE,IAAA,UAAU,EAAC,YADb;AAEE,IAAA,UAAU,EAAEF,UAFd;AAGE,IAAA,UAAU,EAAGiB,IAAD,IACV,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,IAAN,CAAW,IAAX;AACE,MAAA,MAAM,EAAE,oBAAC,MAAD;AAAQ,QAAA,GAAG,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADV,CAEE;AAFF;AAGE,MAAA,KAAK,EACH,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAG,2BAA0BA,IAAI,CAACH,EAAG,EAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGG,IAAI,CAACN,MADR,CAJJ;AAQE,MAAA,WAAW,EAAEM,IAAI,CAACJ,WARpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALF,CADF;AA4BD;;AAED,eAAed,YAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../App.css\";\nimport { List, Avatar } from \"antd\";\nimport Nav from \"./Nav\";\nimport { Link } from \"react-router-dom\";\n\nfunction ScreenSource() {\n  const [sourceList, setSourceList] = useState([]);\n\n  useEffect(() => {\n    async function loadSource() {\n      var rawResponse = await fetch(\n        \"https://newsapi.org/v2/top-headlines/sources?apiKey=e1af60fe24304a10815b363c551f94ea&country=fr&language=fr\"\n      );\n      var response = await rawResponse.json();\n      // setSourceList(response);\n\n      var sourcesFromAPI = response.sources.map((sourceAPI) => {\n        return {\n          source: sourceAPI.name,\n          description: sourceAPI.description,\n          id: sourceAPI.id,\n        };\n      });\n      setSourceList(sourcesFromAPI);\n      console.log(sourcesFromAPI);\n    }\n    loadSource();\n  }, []);\n\n  return (\n    <div>\n      <Nav />\n\n      <div className=\"Banner\" />\n\n      <div className=\"HomeThemes\">\n        <List\n          itemLayout=\"horizontal\"\n          dataSource={sourceList}\n          renderItem={(item) => (\n            <List.Item>\n              <List.Item.Meta\n                avatar={<Avatar src=\"#\" />}\n                // title={<Link to='/screenarticlesbysource'>{item.source}</Link>}\n                title={\n                  <Link to={`/screenarticlesbysource/${item.id}`}>\n                    {item.source}\n                  </Link>\n                }\n                description={item.description}\n              />\n            </List.Item>\n          )}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default ScreenSource;\n"]},"metadata":{},"sourceType":"module"}