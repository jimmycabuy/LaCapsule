{"ast":null,"code":"var _jsxFileName = \"/Users/jimmycabuy/Documents/jim/DIVERS/code/lacapsule/projet/6morningnews/part4/reactapp/src/components/ScreenSource.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport \"../App.css\";\nimport { List, Avatar } from \"antd\";\nimport Nav from \"./Nav\";\nimport { Link } from \"react-router-dom\";\n\nfunction ScreenSource() {\n  const [sourceList, setSourceList] = useState([]);\n\n  async function loadSource(country) {\n    var rawResponse = await fetch(`https://newsapi.org/v2/top-headlines/sources?apiKey=f588bacf9c9e41adb12cb1223d34402d&country=${country}`);\n    var response = await rawResponse.json();\n    var sourcesFromAPI = response.sources.map(sourceAPI => {\n      return {\n        source: sourceAPI.name,\n        description: sourceAPI.description,\n        id: sourceAPI.id\n      };\n    });\n    setSourceList(sourcesFromAPI);\n    console.log(sourcesFromAPI);\n    var iconSource = \"\";\n\n    if (sourceAPI.description === 'business') {\n      iconSource = \"business\";\n    }\n  }\n\n  useEffect(() => {\n    loadSource(\"fr\");\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Nav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Banner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"./images/france.png \",\n    style: {\n      width: \"40px\",\n      cursor: 'pointer'\n    },\n    onClick: () => loadSource(\"fr\"),\n    alt: \"france\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: \"./images/angleterre.png \",\n    style: {\n      width: \"40px\",\n      cursor: 'pointer'\n    },\n    onClick: () => loadSource(\"gb\"),\n    alt: \"angleterre\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: \"./images/ireland.png \",\n    style: {\n      width: \"40px\",\n      cursor: 'pointer'\n    },\n    onClick: () => loadSource(\"ie\"),\n    alt: \"ireland\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: \"./images/usa.png \",\n    style: {\n      width: \"40px\",\n      cursor: 'pointer'\n    },\n    onClick: () => loadSource(\"us\"),\n    alt: \"usa\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: \"./images/india.png \",\n    style: {\n      width: \"40px\",\n      cursor: 'pointer'\n    },\n    onClick: () => loadSource(\"in\"),\n    alt: \"india\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: \"./images/italy.png \",\n    style: {\n      width: \"40px\",\n      cursor: 'pointer'\n    },\n    onClick: () => loadSource(\"it\"),\n    alt: \"italy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: \"./images/brazil.png \",\n    style: {\n      width: \"40px\",\n      cursor: 'pointer'\n    },\n    onClick: () => loadSource(\"br\"),\n    alt: \"brazil\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: \"./images/australia.png \",\n    style: {\n      width: \"40px\",\n      cursor: 'pointer'\n    },\n    onClick: () => loadSource(\"au\"),\n    alt: \"australia\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: \"./images/germany.png \",\n    style: {\n      width: \"40px\",\n      cursor: 'pointer'\n    },\n    onClick: () => loadSource(\"de\"),\n    alt: \"germany\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"HomeThemes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    itemLayout: \"horizontal\",\n    dataSource: sourceList,\n    renderItem: (item, i) => /*#__PURE__*/React.createElement(List.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(List.Item.Meta, {\n      avatar: /*#__PURE__*/React.createElement(Avatar, {\n        src: \"/images/${}.png\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }\n      }),\n      title: /*#__PURE__*/React.createElement(Link, {\n        to: `/screenarticlesbysource/${item.id}`,\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 19\n        }\n      }, item.source),\n      description: item.description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default ScreenSource;","map":{"version":3,"sources":["/Users/jimmycabuy/Documents/jim/DIVERS/code/lacapsule/projet/6morningnews/part4/reactapp/src/components/ScreenSource.jsx"],"names":["React","useState","useEffect","List","Avatar","Nav","Link","ScreenSource","sourceList","setSourceList","loadSource","country","rawResponse","fetch","response","json","sourcesFromAPI","sources","map","sourceAPI","source","name","description","id","console","log","iconSource","width","cursor","item","i"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../App.css\";\nimport { List, Avatar } from \"antd\";\nimport Nav from \"./Nav\";\nimport { Link } from \"react-router-dom\";\n\nfunction ScreenSource() {\n  const [sourceList, setSourceList] = useState([]);\n  \n  async function loadSource(country) {\n    var rawResponse = await fetch(\n      `https://newsapi.org/v2/top-headlines/sources?apiKey=f588bacf9c9e41adb12cb1223d34402d&country=${country}`\n      );\n      var response = await rawResponse.json();\n      var sourcesFromAPI = response.sources.map((sourceAPI) => {\n        return {\n          source: sourceAPI.name,\n          description: sourceAPI.description,\n          id: sourceAPI.id,\n        };\n      });\n      setSourceList(sourcesFromAPI);\n      console.log(sourcesFromAPI);\n      var iconSource = \"\";\n      if(sourceAPI.description === 'business'){\n        iconSource = \"business\"\n      }\n    }\n\n  useEffect(() => {\n      loadSource(\"fr\");\n    }, []);\n\n  return (\n    <div>\n      <Nav />\n      <div className=\"Banner\">\n        <img\n          src=\"./images/france.png \"\n          style={{ width: \"40px\", cursor:'pointer' }}\n          onClick={() => loadSource(\"fr\")}\n          alt=\"france\"\n        />\n        <img\n          src=\"./images/angleterre.png \"\n          style={{ width: \"40px\", cursor:'pointer' }}\n          onClick={() => loadSource(\"gb\")}\n          alt=\"angleterre\"\n        />\n        <img\n          src=\"./images/ireland.png \"\n          style={{ width: \"40px\", cursor:'pointer' }}\n          onClick={() => loadSource(\"ie\")}\n          alt=\"ireland\"\n        />\n        <img\n          src=\"./images/usa.png \"\n          style={{ width: \"40px\", cursor:'pointer' }}\n          onClick={() => loadSource(\"us\")}\n          alt=\"usa\"\n        />\n        <img\n          src=\"./images/india.png \"\n          style={{ width: \"40px\", cursor:'pointer' }}\n          onClick={() => loadSource(\"in\")}\n          alt=\"india\"\n        />\n        <img\n          src=\"./images/italy.png \"\n          style={{ width: \"40px\", cursor:'pointer' }}\n          onClick={() => loadSource(\"it\")}\n          alt=\"italy\"\n        />\n        <img\n          src=\"./images/brazil.png \"\n          style={{ width: \"40px\", cursor:'pointer' }}\n          onClick={() => loadSource(\"br\")}\n          alt=\"brazil\"\n        />\n        <img\n          src=\"./images/australia.png \"\n          style={{ width: \"40px\", cursor:'pointer' }}\n          onClick={() => loadSource(\"au\")}\n          alt=\"australia\"\n        />\n        <img\n          src=\"./images/germany.png \"\n          style={{ width: \"40px\", cursor:'pointer' }}\n          onClick={() => loadSource(\"de\")}\n          alt=\"germany\"\n        />\n      </div>\n      <div className=\"HomeThemes\">\n        <List\n          itemLayout=\"horizontal\"\n          dataSource={sourceList}\n          renderItem={(item, i) => (\n            <List.Item>\n              <List.Item.Meta\n                avatar={<Avatar src=\"/images/${}.png\" />}\n                title={\n                  <Link to={`/screenarticlesbysource/${item.id}`} key={i}>\n                    {item.source}\n                  </Link>\n                }\n                description={item.description}\n              />\n            </List.Item>\n          )}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default ScreenSource;\n"]},"metadata":{},"sourceType":"module"}