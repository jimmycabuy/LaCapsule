{"ast":null,"code":"var _jsxFileName = \"/Users/jimmycabuy/Documents/jim/DIVERS/code/lacapsule/projet/6morningnews/part4/reactapp/src/components/ScreenSource.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport \"../App.css\";\nimport { List, Avatar } from \"antd\";\nimport Nav from \"./Nav\";\nimport { Link } from \"react-router-dom\";\n\nfunction ScreenSource() {\n  const [sourceList, setSourceList] = useState([]);\n  let [paysSource, setPaysSource] = useState(\"\");\n  useEffect(() => {\n    async function loadSource() {\n      setPaysSource(\"us\");\n      var rawResponse = await fetch(`https://newsapi.org/v2/top-headlines/sources?apiKey=77fb885ad79242c49d08b6de58756859&country=${paysSource}`);\n      var response = await rawResponse.json();\n      var sourcesFromAPI = response.sources.map(sourceAPI => {\n        return {\n          source: sourceAPI.name,\n          description: sourceAPI.description,\n          id: sourceAPI.id\n        };\n      });\n      setSourceList(sourcesFromAPI);\n      console.log(sourcesFromAPI);\n    }\n\n    loadSource();\n  }, [\"us\"]);\n\n  let clickCountry = () => {\n    console.log(\"bonjour\");\n    setPaysSource(\"us\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Nav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Banner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"./images/france.png \",\n    style: {\n      width: \"40px\"\n    },\n    alt: \"france\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: \"./images/angleterre.png \",\n    style: {\n      width: \"40px\"\n    },\n    onClick: () => clickCountry(),\n    alt: \"angleterre\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"HomeThemes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    itemLayout: \"horizontal\",\n    dataSource: sourceList,\n    renderItem: (item, i) => /*#__PURE__*/React.createElement(List.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(List.Item.Meta, {\n      avatar: /*#__PURE__*/React.createElement(Avatar, {\n        src: \"/images/general.png\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }\n      }),\n      title: /*#__PURE__*/React.createElement(Link, {\n        to: `/screenarticlesbysource/${item.id}`,\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 19\n        }\n      }, item.source),\n      description: item.description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default ScreenSource;","map":{"version":3,"sources":["/Users/jimmycabuy/Documents/jim/DIVERS/code/lacapsule/projet/6morningnews/part4/reactapp/src/components/ScreenSource.jsx"],"names":["React","useState","useEffect","List","Avatar","Nav","Link","ScreenSource","sourceList","setSourceList","paysSource","setPaysSource","loadSource","rawResponse","fetch","response","json","sourcesFromAPI","sources","map","sourceAPI","source","name","description","id","console","log","clickCountry","width","item","i"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../App.css\";\nimport { List, Avatar } from \"antd\";\nimport Nav from \"./Nav\";\nimport { Link } from \"react-router-dom\";\n\nfunction ScreenSource() {\n  const [sourceList, setSourceList] = useState([]);\n  let [paysSource, setPaysSource] = useState(\"\");\n\n  \n  useEffect(() => {\n    async function loadSource() {\n      setPaysSource(\"us\")\n      var rawResponse = await fetch(\n        `https://newsapi.org/v2/top-headlines/sources?apiKey=77fb885ad79242c49d08b6de58756859&country=${paysSource}`\n        );\n        var response = await rawResponse.json();\n        \n        var sourcesFromAPI = response.sources.map((sourceAPI) => {\n          return {\n            source: sourceAPI.name,\n            description: sourceAPI.description,\n            id: sourceAPI.id,\n          };\n        });\n        setSourceList(sourcesFromAPI);\n        console.log(sourcesFromAPI);\n      }\n      loadSource();\n      \n    }, [\"us\"]);\n    \n    let clickCountry = () => {\n      console.log(\"bonjour\");\n      setPaysSource(\"us\");\n    };\n  return (\n    <div>\n      <Nav />\n\n      <div className=\"Banner\">\n        <img\n          src=\"./images/france.png \"\n          style={{ width: \"40px\" }}\n          alt=\"france\"\n        />\n        <img\n          src=\"./images/angleterre.png \"\n          style={{ width: \"40px\" }}\n          onClick={() => clickCountry()}\n          alt=\"angleterre\"\n        />\n      </div>\n      <div className=\"HomeThemes\">\n        <List\n          itemLayout=\"horizontal\"\n          dataSource={sourceList}\n          renderItem={(item, i) => (\n            <List.Item>\n              <List.Item.Meta\n                avatar={<Avatar src=\"/images/general.png\" />}\n                title={\n                  <Link to={`/screenarticlesbysource/${item.id}`} key={i}>\n                    {item.source}\n                  </Link>\n                }\n                description={item.description}\n              />\n            </List.Item>\n          )}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default ScreenSource;\n"]},"metadata":{},"sourceType":"module"}