{"ast":null,"code":"var _jsxFileName = \"/Users/jimmycabuy/Documents/jim/DIVERS/code/lacapsule/projet/6morningnews/part5/reactapp/src/components/ScreenArticlesBySource.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport \"../App.css\";\nimport { Card, Icon, Modal } from \"antd\";\nimport Nav from \"./Nav\";\nimport { useParams } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nconst {\n  Meta\n} = Card;\n\nfunction ScreenArticlesBySource(props) {\n  const [articleBySourceList, setSarticleBySourceList] = useState([]);\n  const [articleTitle, setArticleTitle] = useState(\"\");\n  const [articleContent, setArticleContent] = useState(\"\");\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  var {\n    id\n  } = useParams();\n  useEffect(() => {\n    async function loadArticlesBySource() {\n      var rawResponse2 = await fetch(`https://newsapi.org/v2/top-headlines?sources=${id}&apiKey=f588bacf9c9e41adb12cb1223d34402d`);\n      var response2 = await rawResponse2.json();\n      setSarticleBySourceList(response2.articles);\n    }\n\n    loadArticlesBySource();\n  });\n\n  const showModal = (title, content) => {\n    setIsModalVisible(true);\n    setArticleTitle(title);\n    setArticleContent(content);\n  };\n\n  const handleOk = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Nav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Banner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, articleBySourceList === null || articleBySourceList === void 0 ? void 0 : articleBySourceList.map((articleBySource, i) => /*#__PURE__*/React.createElement(\"div\", {\n    key: i,\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    style: {\n      width: 300,\n      margin: \"15px\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"space-between\"\n    },\n    cover: /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"example\",\n      src: articleBySource.urlToImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 22\n      }\n    }),\n    actions: [/*#__PURE__*/React.createElement(Icon, {\n      type: \"read\",\n      key: \"ellipsis2\",\n      onClick: () => showModal(articleBySource.title, articleBySource.content),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Icon, {\n      type: \"like\",\n      key: \"ellipsis\",\n      onClick: () => props.addToWishList(articleBySource),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    })],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Meta, {\n    title: articleBySource.title,\n    description: articleBySource.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(Modal, {\n    title: articleTitle,\n    visible: isModalVisible,\n    onOk: handleOk,\n    onCancel: handleCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, articleContent))));\n}\n\nconst userToken = \"EXmGd\";\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addToWishList: async function (article) {\n      await fetch(\"/wishlist\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\n        },\n        body: `articleTitle=${article.title}&art&articleDescription=${article.description}&articleContent=${article.content}&token=${userToken}`\n      });\n      dispatch({\n        type: \"addArticle\",\n        articleLiked: article\n      });\n    }\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(ScreenArticlesBySource);","map":{"version":3,"sources":["/Users/jimmycabuy/Documents/jim/DIVERS/code/lacapsule/projet/6morningnews/part5/reactapp/src/components/ScreenArticlesBySource.jsx"],"names":["React","useState","useEffect","Card","Icon","Modal","Nav","useParams","connect","Meta","ScreenArticlesBySource","props","articleBySourceList","setSarticleBySourceList","articleTitle","setArticleTitle","articleContent","setArticleContent","isModalVisible","setIsModalVisible","id","loadArticlesBySource","rawResponse2","fetch","response2","json","articles","showModal","title","content","handleOk","handleCancel","map","articleBySource","i","display","justifyContent","width","margin","flexDirection","urlToImage","addToWishList","description","userToken","mapDispatchToProps","dispatch","article","method","headers","body","type","articleLiked"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../App.css\";\nimport { Card, Icon, Modal } from \"antd\";\nimport Nav from \"./Nav\";\nimport { useParams } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nconst { Meta } = Card;\n\nfunction ScreenArticlesBySource(props) {\n  const [articleBySourceList, setSarticleBySourceList] = useState([]);\n  const [articleTitle, setArticleTitle] = useState(\"\");\n  const [articleContent, setArticleContent] = useState(\"\");\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  var { id } = useParams();\n\n  useEffect(() => {\n    async function loadArticlesBySource() {\n      var rawResponse2 = await fetch(\n        `https://newsapi.org/v2/top-headlines?sources=${id}&apiKey=f588bacf9c9e41adb12cb1223d34402d`\n      );\n      var response2 = await rawResponse2.json();\n      setSarticleBySourceList(response2.articles);\n    }\n    loadArticlesBySource();\n  });\n\n  const showModal = (title, content) => {\n    setIsModalVisible(true);\n    setArticleTitle(title);\n    setArticleContent(content);\n  };\n\n  const handleOk = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  return (\n    <div>\n      <Nav />\n\n      <div className=\"Banner\" />\n\n      <div className=\"Card\">\n        {articleBySourceList?.map((articleBySource, i) => (\n          <div key={i} style={{ display: \"flex\", justifyContent: \"center\" }}>\n            <Card\n              style={{\n                width: 300,\n                margin: \"15px\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                justifyContent: \"space-between\",\n              }}\n              cover={<img alt=\"example\" src={articleBySource.urlToImage} />}\n              actions={[\n                <Icon\n                  type=\"read\"\n                  key=\"ellipsis2\"\n                  onClick={() =>\n                    showModal(articleBySource.title, articleBySource.content)\n                  }\n                />,\n                <Icon\n                  type=\"like\"\n                  key=\"ellipsis\"\n                  onClick={() => props.addToWishList(articleBySource)}\n                />,\n              ]}\n            >\n              <Meta\n                title={articleBySource.title}\n                description={articleBySource.description}\n              />\n            </Card>\n          </div>\n        ))}\n        <Modal\n          title={articleTitle}\n          visible={isModalVisible}\n          onOk={handleOk}\n          onCancel={handleCancel}\n        >\n          <p>{articleContent}</p>\n        </Modal>\n      </div>\n    </div>\n  );\n}\n\nconst userToken = \"EXmGd\"\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addToWishList: async function (article) {\n      await fetch (\"/wishlist\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\n        body: `articleTitle=${article.title}&art&articleDescription=${article.description}&articleContent=${article.content}&token=${userToken}`,\n      })\n      dispatch({ type: \"addArticle\", articleLiked: article });\n    },\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(ScreenArticlesBySource);"]},"metadata":{},"sourceType":"module"}